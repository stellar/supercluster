apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: job-monitor-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: "{{ .Values.monitor.ingress_class_name}}"
  rules:
  - host: "{{ .Values.monitor.hostname}}"
    http:
      paths:
      - path: "{{ .Values.monitor.path}}"
        pathType: Prefix
        backend:
          service:
            name: job-monitor
            port:
              number: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: job-monitor
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: job-monitor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: job-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: job-monitor
  template:
    metadata:
      labels:
        app: job-monitor
    spec:
      containers:
      - name: job-monitor
        image: stellar/ssc-job-monitor:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "{{ .Values.monitor.resources.requests.cpu}}"
            memory: "{{ .Values.monitor.resources.requests.memory}}"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: job-monitor-config
      initContainers:
      - name: wait-for-preload
        image: redis:7
        command: ['/bin/sh', '-c']
        args:
        - |-
          # Wait until the job queue has items
          until [ $(redis-cli -h {{ .Values.redis.hostname}} -p  {{ .Values.redis.port}} LLEN {{ .Values.redis.job_queue }}) -gt 0 ]; do
            echo waiting for preload
            sleep 2
          done
          echo job available
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: job-monitor-config
data:
  REDIS_HOST: "{{ .Values.redis.hostname}}"
  REDIS_PORT: "{{ .Values.redis.port}}"
  JOB_QUEUE: "{{ .Values.redis.job_queue }}"
  SUCCESS_QUEUE: "{{ .Values.redis.success_queue }}"
  FAILED_QUEUE: "{{ .Values.redis.failed_queue }}"
  PROGRESS_QUEUE: "{{ .Values.redis.progress_queue }}"
  METRICS: "{{ .Values.redis.metrics }}"
  WORKER_PREFIX: "stellar-core"
  WORKER_COUNT: "{{ .Values.worker.replicas }}"
  LOGGING_INTERVAL_SECONDS: "{{ .Values.monitor.logging_interval_seconds}}"
  LOGGING_LEVEL: "{{ .Values.monitor.logging_level}}"